/* =======================================================
    Grid
   ======================================================= */

// Grid containers

.g {
	overflow: hidden;
	clear: both;
	@include clearfix;
}

.gi {
  float: left;
  margin-bottom: $space-half;
}

.gi-bordered {
  border-top: $border-width dotted $border-color;
  padding-top: $space-half;
}

/*  Quick grids
   ======================================================= */

// 1-up grid

.g-1up {
  .gi {
    float: none;
    width: 100%;
  }
}

// 2-up grid

.g-2up {
  .gi {
    width: 100%;
  }
  
  @include breakpoint($bp-med) {
    .gi {
      @include float-span(3);
    }
    .gi:nth-child(2n) {
      @include float-span(3,'last');
    }
    .gi:nth-child(2n+1) {
      @include float-span(3,'first');
    }
  }
}

// 3-up grid

.g-3up {
  .gi {
    width: 100%;
  }
  
  @include breakpoint($bp-med) {
    .gi {
      @include float-span(2);
    }
    .gi:nth-child(3n) {
      @include float-span(2,'last');
    }
    .gi:nth-child(3n+1) {
      @include float-span(2,'first');
    }
  }
}

// 1-2 grid

.g-1-2 {
  .gi {
    width: 100%;
  }
  
  @include breakpoint($bp-med) {
    .gi {
      @include float-span(2);
    }
    .gi:nth-child(2n) {
      @include float-span(4,'last');
    }
    .gi:nth-child(2n+1) {
      @include float-span(2,'first');
    }
  }
}

// 2-1 grid

.g-2-1 {
  .gi {
    width: 100%;
  }
  
  @include breakpoint($bp-med) {
    .gi {
      @include float-span(4);
    }
    .gi:nth-child(2n) {
      @include float-span(2,'last');
    }
    .gi:nth-child(2n+1) {
      @include float-span(4,'first');
    }
  }
}

// 1-5 grid

.g-1-5 {
  .gi {
    width: 100%;
  }
  
  @include breakpoint($bp-med) {
    .gi {
      @include float-span(1);
    }
    .gi:nth-child(2n) {
      @include float-span(5,'last');
    }
    .gi:nth-child(2n+1) {
      @include float-span(1,'first');
    }
  }
}